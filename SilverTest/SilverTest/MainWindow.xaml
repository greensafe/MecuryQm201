<Window x:Name="window" x:Class="SilverTest.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d3="clr-namespace:InteractiveDataDisplay.WPF;assembly=InteractiveDataDisplay.WPF"
        xmlns:dw="http://research.microsoft.com/DynamicDataDisplay/1.0"
        xmlns:col="clr-namespace:System.Collections;assembly=mscorlib"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:SilverTest"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="QM201H" Height="850" Width="1000" Loaded="window_Loaded" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <XmlDataProvider IsAsynchronous="False" x:Key="standardSampleData" Source="/resources/StandardSamples_Table.xml" XPath="/StandardSamples/StandardSample"/>
        <XmlDataProvider IsAsynchronous="False" x:Key="newTargetData" Source="/resources/NewTestTarget_Table.xml" XPath="/NewTestTargets/NewTestTarget"/>
        <Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <Expander IsExpanded="True">
                            <Expander.Header>
                                <TextBlock Text="{Binding Path=Name}"/>
                            </Expander.Header>
                            <ItemsPresenter />
                        </Expander>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <System:DateTime x:Key="current"></System:DateTime>
    </Window.Resources>
    <Grid x:Name="grid">
        <DockPanel x:Name="dockPanel" HorizontalAlignment="Left" Height="{Binding ActualHeight, ElementName=grid, Mode=OneWay}" LastChildFill="False" VerticalAlignment="Top" Width="{Binding ActualWidth, ElementName=grid, Mode=OneWay}" Margin="0,0,0,-61">
            <DockPanel.Background>
                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
            </DockPanel.Background>
            <Menu Height="25" Width="{Binding ActualWidth, ElementName=dockPanel, Mode=OneWay}" DockPanel.Dock="Top">
                <MenuItem Header="文件">
                    <MenuItem Header="新建" Visibility="Collapsed"></MenuItem>
                    <MenuItem Header="打开" Visibility="Collapsed"></MenuItem>
                    <MenuItem Header="关闭" Visibility="Collapsed"></MenuItem>
                    <MenuItem Header="保存" Visibility="Collapsed"></MenuItem>
                    <MenuItem x:Name="savehistory" Header="保存历史" Click="savehistory_Click"></MenuItem>
                    <MenuItem x:Name="loadhistory" Header="载入历史" Click="loadhistory_Click"></MenuItem>
                    <MenuItem Header="输出到excel"></MenuItem>
                    <MenuItem Header="汞打印预览测试数据" Visibility="Collapsed"></MenuItem>
                    <MenuItem Header="汞打印测试数据" Visibility="Collapsed"></MenuItem>
                    <MenuItem Header="打印预览样品中汞含量" Visibility="Collapsed"></MenuItem>
                    <MenuItem Header="砷打印预览测试数据" Visibility="Collapsed"></MenuItem>
                    <MenuItem Header="砷打印测试数据" Visibility="Collapsed"></MenuItem>
                    <MenuItem Header="打印预览样品中砷含量" Visibility="Collapsed"></MenuItem>
                    <MenuItem Header="打印样品中砷含量" Visibility="Collapsed"></MenuItem>
                    <MenuItem x:Name="exitMenu" Header="退出" Click="exitMenu_Click"></MenuItem>
                </MenuItem>
                <MenuItem Header="计算" Visibility="Collapsed">
                    <MenuItem Header="平均值"></MenuItem>
                    <MenuItem Header="相关系数"></MenuItem>
                    <MenuItem Header="汞浓度"></MenuItem>
                    <MenuItem Header="样品中汞的含量"></MenuItem>
                    <MenuItem Header="砷浓度"></MenuItem>
                    <MenuItem Header="样品中砷的含量"></MenuItem>
                </MenuItem>
                <MenuItem Header="工具">
                    <MenuItem x:Name="printRmenu" Header="打印相关系数图" Click="printRmenu_Click"></MenuItem>
                </MenuItem>
                <MenuItem Header="测汞或砷" Visibility="Collapsed">
                    <MenuItem Header="测汞"></MenuItem>
                    <MenuItem Header="测砷"></MenuItem>
                </MenuItem>
                <MenuItem Header="气体或液体">
                    <MenuItem x:Name="testliquidMenu" Header="测液体" Click="testliquidMenu_Click"/>
                    <MenuItem x:Name="testairMenu" Header="测气体" Click="testairMenu_Click"/>
                </MenuItem>
                <MenuItem Header="帮助"></MenuItem>
                <MenuItem Header="开发">
                    <MenuItem x:Name="saveDotsMenu" Header="保存Dots" Checked="saveDotsMenu_Checked" Click="saveDotsMenu_Click"></MenuItem>
                    <MenuItem x:Name="saveRawTextMenu" Header="保存rawtext" Click="saveRawTextMenu_Click"></MenuItem>
                    <MenuItem x:Name="sendTextMenu" Header="发送模拟数据" Click="sendTextMenu_Click" ></MenuItem>
                </MenuItem>
                <MenuItem Header="登陆" Click="MenuItem_Click">
                    <MenuItem x:Name="checkerlogin" Header="审核者登陆"/>
                </MenuItem>
            </Menu>
            <Separator DockPanel.Dock="Top" Height="3" Margin="0" VerticalAlignment="Top" Width="{Binding ActualWidth, ElementName=dockPanel, Mode=OneWay}"/>
            <ToolBarTray x:Name="toolBarTray" Height="32" Width="{Binding ActualWidth, ElementName=dockPanel, Mode=OneWay}" DockPanel.Dock="Top">
                <ToolBarTray.Background>
                    <SolidColorBrush Color="#FFF0F0F0"/>
                </ToolBarTray.Background>
                <ToolBar>
                    <ToolBar.Background>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
                    </ToolBar.Background>
                    <Button x:Name="saveallbtn" ToolTip="快速保存当前数据" VerticalAlignment="Top" Height="30" Click="saveallbtn_Click">
                        <Image Source="images\save.png">

                        </Image>
                    </Button>
                    <Button x:Name="exportExcelBtn" ToolTip="输出excel表" VerticalAlignment="Top" Height="30" Click="exportExcelBtn_Click" >
                        <Image Source="images\excel.png">

                        </Image>
                    </Button>
                    <Button x:Name="exportDotsBtn" ToolTip="输出点值" VerticalAlignment="Top" Height="30" Click="exportDotsBtn_Click">
                        <Image Source="images\exportraw.png">

                        </Image>
                    </Button>
                    <Button x:Name="printRbtn" ToolTip="打印R图" VerticalAlignment="Top" Height="30" Visibility="Collapsed" Click="printRbtn_Click">
                        <Image Source="images\print.png">

                        </Image>
                    </Button>
                </ToolBar>
            </ToolBarTray>
            <Separator DockPanel.Dock="Top" Height="3" Margin="0" VerticalAlignment="Top" Width="{Binding ActualWidth, ElementName=dockPanel, Mode=OneWay}"/>
            <!--
            <d3:Chart Visibility="Hidden" Name="plotter" DockPanel.Dock="Top" Width="{Binding ActualWidth, ElementName=dockPanel, Mode=OneWay}" Height="200">
                <d3:Chart.Title>
                    <TextBlock HorizontalAlignment="Center" FontSize="18" Margin="0,5,0,5">实时波形</TextBlock>
                </d3:Chart.Title>
                <d3:LineGraph x:Name="linegraph" Description="Simple linegraph" Stroke="Blue" StrokeThickness="3"/>
            </d3:Chart>
            -->

            <TabControl x:Name="sampletab" DockPanel.Dock="Top" SelectionChanged="sampletab_SelectionChanged">
                <TabItem x:Name="newtabitem" Selector.Selected="OnNewTabSelected">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <!--<Ellipse Width="10" Height="10" Fill="DarkGray"/>-->
                            <TextBlock>样品测试</TextBlock>
                        </StackPanel>
                    </TabItem.Header>
                    <StackPanel>

                        <DataGrid x:Name="NewTargetDgd" Height="300" DockPanel.Dock="Top" 
                                  Width="{Binding ActualWidth, ElementName=dockPanel, Mode=OneWay}" 
                                  CanUserAddRows="False"
                                  ItemsSource="{Binding}"  
                                  Margin="0,0,0,0" AutoGenerateColumns="False" CellEditEnding="NewTargetDgd_CellEditEnding">

                            <DataGrid.Columns>
                                <DataGridTextColumn Header="序号" Width="80" Binding="{Binding Code,Mode=TwoWay}" IsReadOnly="True"></DataGridTextColumn>
                                <DataGridTextColumn Header="样品名" Width="80" Binding="{Binding NewName,Mode=TwoWay}"></DataGridTextColumn>
                                <DataGridTextColumn Header="产地" Width="80" Binding="{Binding Place,Mode=TwoWay}"></DataGridTextColumn>
                                <DataGridTextColumn Header="响应值" Width="80" Binding="{Binding ResponseValue1,Mode=TwoWay}" IsReadOnly="True"></DataGridTextColumn>
                                <DataGridTextColumn Header="响应值2" Width="80" Binding="{Binding ResponseValue2,Mode=TwoWay}" Visibility="Hidden" IsReadOnly="True"></DataGridTextColumn>
                                <DataGridTextColumn Header="响应值3" Width="80" Binding="{Binding ResponseValue3,Mode=TwoWay}" Visibility="Hidden" IsReadOnly="True"></DataGridTextColumn>
                                <DataGridTextColumn Header="平均值" Width="80" Binding="{Binding AverageValue,Mode=TwoWay}" Visibility="Hidden" IsReadOnly="True"></DataGridTextColumn>
                                <DataGridTextColumn x:Name="newAirSampTimeCol" Header="取样时间m" Width="90" Binding="{Binding AirSampleTime,Mode=TwoWay}" IsReadOnly="True"></DataGridTextColumn>
                                <DataGridTextColumn x:Name="newAirFluentCol" Header="流量L/m" Width="80" Binding="{Binding AirFluent,Mode=TwoWay}" IsReadOnly="True"></DataGridTextColumn>
                                <DataGridTextColumn Header="汞浓度ng/mL" Width="80" Binding="{Binding Density,Mode=TwoWay}" Visibility="Hidden" IsReadOnly="True"></DataGridTextColumn>
                                <DataGridTextColumn Header="样品质量" Width="80" Binding="{Binding Weight,Mode=TwoWay}"></DataGridTextColumn>
                                <DataGridTextColumn x:Name="newLiquidBulkCol"  Header="样品消化液总体积ml" Width="80" Visibility="Hidden"></DataGridTextColumn>
                                <DataGridTextColumn Header="样品总体积L" Binding="{Binding AirTotolBulk,Mode=TwoWay}" Width="80"></DataGridTextColumn>
                                <DataGridTextColumn Header="样品中汞含量mg/m3" Binding="{Binding AirG,Mode=TwoWay}" Width="80" IsReadOnly="True"></DataGridTextColumn>
                                <DataGridTemplateColumn Header="选择标样" Width="*">
                                    <DataGridTemplateColumn.CellTemplate >
                                        <DataTemplate>
                                            <ComboBox x:Name="standardCmb" SelectionChanged="standardCmb_SelectionChanged" 
                                                      ItemsSource="{Binding ItemsSource, ElementName=standardSampleDgd}"
                                                      DisplayMemberPath="GroupName" SelectedValuePath="Code"
                                                      Width="100"
                                                      HorizontalAlignment="Left"
                                                      SelectedValue="{Binding SampleName}" Loaded="standardCmb_Loaded">
                                            </ComboBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <!--
                                <DataGridComboBoxColumn x:Name="test" Header="test">
                                    <DataGridComboBoxColumn.EditingElementStyle>
                                        <Style TargetType="{x:Type ComboBox}">
                                            <EventSetter Event="SelectionChanged" Handler="SomeSelectionChanged" />
                                        </Style>
                                    </DataGridComboBoxColumn.EditingElementStyle>
                                    <DataGridComboBoxColumn.ItemsSource>
                                        <col:ArrayList>
                                            <sys:String>标样一</sys:String>
                                            <sys:String>标样二</sys:String>
                                            <sys:String>标样三</sys:String>
                                            <sys:String>标样四</sys:String>
                                        </col:ArrayList>
                                    </DataGridComboBoxColumn.ItemsSource>
                                </DataGridComboBoxColumn>
                                -->
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </TabItem>
                <TabItem Selector.Selected="OnStandardTabSelected" x:Name="standardtabitem" Header="标样测试">
                    <StackPanel>
                        <DataGrid x:Name="standardSampleDgd" Height="300" DockPanel.Dock="Top" 
                                  Width="{Binding ActualWidth, ElementName=dockPanel, Mode=OneWay}" 
                                  ItemsSource="{Binding}"
                                  CanUserAddRows="False"
                                  Margin="0,0,0,0" AutoGenerateColumns="False" SelectionChanged="standardSampleDgd_SelectionChanged" CellEditEnding="standardSampleDgd_CellEditEnding">
                            <DataGrid.GroupStyle>
                                <GroupStyle ContainerStyle="{StaticResource GroupHeaderStyle}">
                                    <GroupStyle.Panel>
                                        <ItemsPanelTemplate>
                                            <DataGridRowsPresenter/>
                                        </ItemsPanelTemplate>
                                    </GroupStyle.Panel>
                                </GroupStyle>
                            </DataGrid.GroupStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="序号" Width="80" Binding="{Binding Path=Code,Mode=TwoWay}" IsReadOnly="True"></DataGridTextColumn>
                                <DataGridTextColumn Header="组名" Width="80" Binding="{Binding Path=GroupName,Mode=TwoWay}"></DataGridTextColumn>
                                <DataGridTextColumn Header="样品名" Width="80" Binding="{Binding Path=SampleName,Mode=TwoWay}"></DataGridTextColumn>
                                <DataGridTextColumn x:Name="standardAirDensityCol" Header="汞浓度ng/mL" Width="80" Binding="{Binding Path=Density,Mode=TwoWay}" Visibility="Hidden" IsReadOnly="True" ></DataGridTextColumn>
                                <DataGridTextColumn Header="响应值" Width="80" Binding="{Binding Path=ResponseValue1,Mode=TwoWay}" IsReadOnly="True"></DataGridTextColumn>
                                <DataGridTextColumn x:Name="standardAirSampleTimeCol" Header="取样时间m" Width="90" Binding="{Binding AirSampleTime,Mode=TwoWay}" Visibility="Hidden" IsReadOnly="True"></DataGridTextColumn>
                                <DataGridTextColumn x:Name="standardAirFluentCol" Header="流量L/m" Width="80" Binding="{Binding AirFluent,Mode=TwoWay}" Visibility="Hidden" IsReadOnly="True"></DataGridTextColumn>
                                <DataGridTextColumn x:Name="airtemperature" Header="温度" Width="80" Binding="{Binding Temperature,Mode=TwoWay}" IsReadOnly="True"></DataGridTextColumn>
                                <DataGridTextColumn x:Name="airbulk" Header="标样体积mL" Width="80" Binding="{Binding AirML,Mode=TwoWay}" IsReadOnly="True"></DataGridTextColumn>
                                <DataGridTextColumn x:Name="airhan" Header="汞量ng" Width="80" Binding="{Binding AirG,Mode=TwoWay}" IsReadOnly="True"></DataGridTextColumn>
                                <DataGridTextColumn Header="样品质量" Width="80" Binding="{Binding Path=Weight,Mode=TwoWay}"></DataGridTextColumn>
                                <DataGridTextColumn x:Name="standardProviderCol" Header="样品供应商" Width="80" Binding="{Binding Path=ProviderCompany,Mode=TwoWay}" Visibility="Hidden"></DataGridTextColumn>
                                <DataGridTextColumn x:Name="standardPlaceCol"  Header="产地" Width="80" Binding="{Binding Path=Place,Mode=TwoWay}" Visibility="Hidden"></DataGridTextColumn>
                                <DataGridTextColumn Header="样品购买日期" Width="80" Binding="{Binding Path=BuyDate,Mode=TwoWay}"></DataGridTextColumn>
                                <DataGridTextColumn Header="斜率" Width="80" Binding="{Binding Path=A,Mode=TwoWay}" IsReadOnly="True"></DataGridTextColumn>
                                <DataGridTextColumn Header="截距" Width="80" Binding="{Binding Path=B,Mode=TwoWay}" IsReadOnly="True"></DataGridTextColumn>
                                <DataGridTextColumn Header="相关系数" Width="*" Binding="{Binding Path=R,Mode=TwoWay}" IsReadOnly="True"></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </TabItem>
            </TabControl>
            <StackPanel x:Name="waveContainer" Margin="0,20" DockPanel.Dock="Top" Orientation="Horizontal">
                <dw:ChartPlotter x:Name="realCpt" Width="400" Height="200" DockPanel.Dock="Top" Margin="10,10,20,10"></dw:ChartPlotter>
                <GroupBox x:Name="paramGbx" Header="y = ax + b"  Height="200" Width="500" Margin="40,0,0,0" Visibility="Visible">
                    <GroupBox.Background>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
                    </GroupBox.Background>
                    <DockPanel HorizontalAlignment="Left" Height="150" LastChildFill="False" Margin="0,0,0,0" VerticalAlignment="Top" Width="480">
                        <Grid DockPanel.Dock="Top" Height="50">
                            <Label Content="截距" HorizontalAlignment="Left" Margin="173,13,0,10" RenderTransformOrigin="0.647,0.037"/>
                            <TextBlock x:Name="bTxb" Height="30" TextWrapping="Wrap" Text="" Margin="254,10,106,10" DockPanel.Dock="Top" Width="120" Background="White"/>
                        </Grid>
                        <Grid Height="50" DockPanel.Dock="Top">
                            <Label Content="斜率" HorizontalAlignment="Left" Margin="176,12,0,13" VerticalAlignment="Center"/>
                            <TextBlock x:Name="aTxb" Height="30" TextWrapping="Wrap" Margin="254,12,102,8" VerticalAlignment="Center" Width="120" Background="White"/>
                        </Grid>
                        <Grid Height="50" DockPanel.Dock="Top">
                            <Label Content="相关系数" HorizontalAlignment="Left" Margin="153,10,0,15" VerticalAlignment="Center"/>
                            <TextBlock x:Name="rTxt" Height="30" TextWrapping="Wrap" Text="" Margin="254,10,101,10" VerticalAlignment="Center" Width="120" Background="White"/>
                        </Grid>
                    </DockPanel>
                </GroupBox>
                <DockPanel Visibility="Collapsed" x:Name="Rstackpanel"  Margin="40,0,0,0"
                        Width="500" 
                        Height="200" >
                    <Canvas x:Name="rCanvas" HorizontalAlignment="Center" Width="500" Height="200" Background="#FFDCD9D9" ClipToBounds="True"/>
                    <!--<StackPanel  Width="200" Height="300">
                   <TextBlock x:Name="RparamSpTxbl" Width="150" Height="300"></TextBlock>
                </StackPanel> -->
                </DockPanel>
            </StackPanel>
            <Separator Width="{Binding ActualWidth, ElementName=grid, Mode=OneWay}" Height="3" DockPanel.Dock="Top"></Separator>
            <DockPanel DockPanel.Dock="Top" Height="50">
                <Button x:Name="modifyBtn" HorizontalAlignment="Left" DockPanel.Dock="Left" Height="30" Content="保存" Margin="20,1,0,0" Click="modifyBtn_Click"  Visibility="Collapsed"/>
                <Button x:Name="exportexelBtn" HorizontalAlignment="Left" DockPanel.Dock="Left" Height="30" Content="输出excel" Margin="20,1,0,0" Click="exportexelBtn_Click" Visibility="Collapsed"/>
                <Button x:Name="RBtn" HorizontalAlignment="Left" DockPanel.Dock="Left" Height="30" Content="计算相关系数" Margin="20,1,0,0" Click="RBtn_Click" Visibility="Hidden" />
                <Button x:Name="testBtn" HorizontalAlignment="Left" DockPanel.Dock="Left" Content="开发" Margin="20,1,0,0" Height="30" Width="50" Click="testBtn_Click" Visibility="Hidden"/>
                <Button x:Name="debugBtn" HorizontalAlignment="Left" DockPanel.Dock="Left" Content="停止发送" Margin="20,1,0,0" Height="20" Width="50" Click="debugBtn_Click" Visibility="Hidden"/>
                <Button x:Name="exitBtn" Content="退出" DockPanel.Dock="Right" Width="50" Height="30" Margin="0,0,25,0" Click="exitBtn_Click"/>
                <Button x:Name="AddRowBtn" DockPanel.Dock="Right"  HorizontalAlignment="Right" Width="50" Height="30" Padding="1" Margin="0,1,20,0"  Content="增加" Click="AddRowBtn_Click" />
                <Button x:Name="DelRowBtn" DockPanel.Dock="Right"  HorizontalAlignment="Right" Width="50" Height="30" Content="删除" Margin="0,1,20,0" Click="DelRowBtn_Click" />
                <Button x:Name="startTestBtn" Width="50" DockPanel.Dock="Right" HorizontalAlignment="Right" Height="30" Content="开始测试" Margin="0,1,60,0" Click="startTestBtn_Click" />
            </DockPanel>

            <StackPanel  DockPanel.Dock="Top" Height="50" Orientation="Vertical">
                <Border x:Name="AnimatedColorButton" Width="48" Height="48" BorderThickness="5" BorderBrush="Gold" CornerRadius="50" Visibility="Hidden">
                    <Border.Triggers>
                        <EventTrigger RoutedEvent="Border.Loaded">
                            <BeginStoryboard>
                                <Storyboard >
                                    <DoubleAnimation Storyboard.TargetName="AnimatedColorButton"
                                     Storyboard.TargetProperty="BorderBrush.Opacity"
                                     RepeatBehavior="Forever"
                                     AutoReverse="True"
                                     To="0.0"
                                     Duration="0:0:0.5" ></DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Border.Triggers>
                    <!--
                    <Button x:Name="statusBtn" Visibility="Hidden">测试中</Button>
                    -->

                    <Button x:Name="statusBtn" Visibility="Hidden" Cursor="Hand" Opacity="1" Grid.Column="3" Grid.Row="1" Grid.ColumnSpan="3" Grid.RowSpan="2" Foreground="#FF7C7C03">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0" CornerRadius="33,33,33,33" Name="PART_Background">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <GradientStop Color="White" Offset="0.0" />
                                            <GradientStop Color="Red" Offset="0.5" />
                                            <GradientStop Color="White" Offset="0.0" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </Border>
            </StackPanel>


            <StatusBar Height="30" Width="{Binding ActualWidth, ElementName=dockPanel, Mode=OneWay}"
                       DockPanel.Dock="Bottom" RenderTransformOrigin="0.503,0.033">
                <StatusBarItem>
                    <TextBlock Text="{Binding Now.Year, Mode=OneWay, Source={StaticResource current}}"></TextBlock>
                </StatusBarItem>
                
                <StatusBarItem>
                    <TextBlock Text="{Binding Now.Month, Mode=OneWay, Source={StaticResource current}}"></TextBlock>
                </StatusBarItem>
                
                <StatusBarItem>
                    <TextBlock Text="{Binding Now.Day, Mode=OneWay, Source={StaticResource current}}"></TextBlock>
                </StatusBarItem>
            </StatusBar>
        </DockPanel>
    </Grid>
</Window>
